version: '3.8'

services:
  # PostgreSQL Database
  postgres:
    image: postgres:15-alpine
    container_name: realchat-postgres-prod
    environment:
      POSTGRES_DB: ${POSTGRES_DB}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  # ScyllaDB Database
  scylla:
    image: scylladb/scylla:5.2
    container_name: realchat-scylla-prod
    command: --smp 2 --memory 2G --overprovisioned 1 --api-address 0.0.0.0
    volumes:
      - scylla_data:/var/lib/scylla
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "cqlsh -e 'describe cluster'"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Redis for caching and sessions
  redis:
    image: redis:7-alpine
    container_name: realchat-redis-prod
    command: redis-server --appendonly yes --requirepass ${REDIS_PASSWORD}
    volumes:
      - redis_data:/data
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "--pass", "${REDIS_PASSWORD}", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Backend Application
  backend:
    build:
      context: ../../backend
      dockerfile: ../infrastructure/docker/Dockerfile.backend
    container_name: realchat-backend-prod
    environment:
      - MIX_ENV=prod
      - DATABASE_URL=${DATABASE_URL}
      - SCYLLA_CONTACT_POINTS=scylla:9042
      - REDIS_URL=redis://redis:6379
      - GUARDIAN_SECRET_KEY=${GUARDIAN_SECRET_KEY}
      - PORT=4000
      - SSL_PORT=4001
      - SSL_KEY_PATH=${SSL_KEY_PATH}
      - SSL_CERT_PATH=${SSL_CERT_PATH}
    volumes:
      - ssl_certs:/app/ssl
    depends_on:
      postgres:
        condition: service_healthy
      scylla:
        condition: service_healthy
      redis:
        condition: service_healthy
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:4000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Frontend Application
  frontend:
    build:
      context: ../../frontend
      dockerfile: ../infrastructure/docker/Dockerfile.frontend
    container_name: realchat-frontend-prod
    depends_on:
      - backend
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:80/health"]
      interval: 30s
      timeout: 10s
      retries: 3

  # Nginx Load Balancer/Reverse Proxy
  nginx:
    image: nginx:alpine
    container_name: realchat-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ../nginx/nginx.conf:/etc/nginx/nginx.conf
      - ssl_certs:/etc/nginx/ssl
    depends_on:
      - backend
      - frontend
    networks:
      - realchat-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost/health"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  postgres_data:
  scylla_data:
  redis_data:
  ssl_certs:

networks:
  realchat-network:
    driver: bridge
